[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hypexbt"
version = "0.1.0"
description = "A Twitter bot that tweets about Hyperliquid exchange, token launches, trading signals, and stats"
readme = "README.md"
license = "MIT"
requires-python = ">=3.13"
authors = [
    { name = "HypeXBT" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "numpy>=1.23.5",
    "tweepy>=4.14.0",
    "APScheduler>=3.10.4",
    "requests>=2.31.0",
    "websockets>=12.0",
    "pandas>=1.5.3",
    "python-dotenv>=1.0.0",
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-mock>=3.12.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/hypexbt/hypexbt"
Repository = "https://github.com/hypexbt/hypexbt"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*.pyc",
    "__pycache__",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.13+
target-version = "py313"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F", "W", "I", "N", "UP", "ANN", "B", "A", "COM", "C4", "DTZ", "T10", "DJ", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF"]
ignore = [
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "B008",    # Do not perform function calls in argument defaults
    "COM812",  # Missing trailing comma
    "ISC001",  # Implicitly concatenated string literals on one line
    "PLR0913", # Too many arguments to function call
    "PLR2004", # Magic value used in comparison
    "TRY003",  # Avoid specifying long messages outside the exception class
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["bot", "src"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["PLR2004", "ANN", "ARG"]
"**/__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

# Exclude directories that shouldn't be type-checked
exclude = [
    "^build/",
    "^dist/",
    "^\\.venv/",
    "^venv/",
    "^\\.git/",
    "^__pycache__/",
] 